[{"/home/mralex/Code/TOP/battleship/src/index.js":"1","/home/mralex/Code/TOP/battleship/src/reportWebVitals.js":"2","/home/mralex/Code/TOP/battleship/src/components/App.js":"3","/home/mralex/Code/TOP/battleship/src/components/AI.js":"4","/home/mralex/Code/TOP/battleship/src/components/Player.js":"5","/home/mralex/Code/TOP/battleship/src/components/Gameboard.js":"6","/home/mralex/Code/TOP/battleship/src/components/missed.js":"7","/home/mralex/Code/TOP/battleship/src/components/Hitted.js":"8","/home/mralex/Code/TOP/battleship/src/components/Ship.js":"9"},{"size":558,"mtime":1610640010263,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610467407108,"results":"12","hashOfConfig":"11"},{"size":3124,"mtime":1610822274708,"results":"13","hashOfConfig":"11"},{"size":4359,"mtime":1610817039907,"results":"14","hashOfConfig":"11"},{"size":1066,"mtime":1610816686033,"results":"15","hashOfConfig":"11"},{"size":1152,"mtime":1610821627369,"results":"16","hashOfConfig":"11"},{"size":158,"mtime":1610822066242,"results":"17","hashOfConfig":"11"},{"size":157,"mtime":1610817038902,"results":"18","hashOfConfig":"11"},{"size":1129,"mtime":1610821545792,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2rks5c",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mralex/Code/TOP/battleship/src/index.js",[],["41","42"],"/home/mralex/Code/TOP/battleship/src/reportWebVitals.js",[],"/home/mralex/Code/TOP/battleship/src/components/App.js",["43"],"/home/mralex/Code/TOP/battleship/src/components/AI.js",["44","45","46"],"import React, { useState, useEffect } from \"react\";\nimport Gameboard from \"./Gameboard\";\nimport Missed from \"./missed\";\nimport Hitted from \"./Hitted\";\nimport { Container } from \"react-bootstrap\";\nconst AI = (props) => {\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n  const random = (max) => ~~(Math.random() * max);\n  const attacked = (x, y, filtering,board) => {\n    const gameboard = document.getElementById(board);\n    const xGrid = [...gameboard.querySelectorAll(`[data-x=\"${x}\"]`)];\n    const yGrid = xGrid.reduce((tot, x) => {\n      console.log(x.getAttribute(\"data-y\"), `${y}`);\n      tot = x.getAttribute(\"data-y\") === `${y}` ? x : tot;\n      return tot;\n    }, \"\");\n    console.log(xGrid, yGrid);\n    console.log(yGrid.classList);\n    return yGrid.classList.contains(filtering) ? true : false;\n  };\n  /*\n  function* aggresiveAttack(xCord, yCord) {\n    let xAxis = xCord;\n    let yAxis = yCord;\n    for (let i = 0; i < 2; i++) {\n      for (let x = 1; x <= 2; x++) {\n        xAxis = x % 2 === 0 ? xAxis + 2 : xAxis - 1;\n        if (xAxis >= 10 || xAxis < 0) {\n          continue;\n        }\n        console.log(xAxis, yAxis);\n        if (attacked(xAxis, yAxis, \"hit\")) continue;\n        yield [xAxis, yAxis];\n      }\n      xAxis--;\n      for (let y = 1; y <= 2; y++) {\n        yAxis = y % 2 === 0 ? yAxis + 2 : yAxis - 1;\n        if (yAxis >= 10 || yAxis < 0) {\n          continue;\n        }\n        console.log(xAxis, yAxis);\n        if (attacked(xAxis, yAxis, \"hit\")) continue;\n        yield [xAxis, yAxis];\n      }\n    }\n  }\n  */\n  const nextRound = () => {\n    console.log(\"In Next Round\");\n    const xAxis = random(10);\n    const yAxis = random(10);\n    if (attacked(xAxis, yAxis, \"hit\",'gameboard')) {\n      return nextRound();\n    }\n    props.sendAttack(xAxis,yAxis)\n    /*if (props.sendAttack(xAxis, yAxis)) {\n      await setnextRound(async () => {\n        for (const attack of aggresiveAttack(xAxis, yAxis)) {\n          if (props.sendAttack(...attack)) {\n            continue;\n          }\n          await setnextRound(() => nextRound);\n          break;\n        }\n      });\n    }*/\n  };\n  const randomShips = (maxSize, minSize) => {\n    if (maxSize === minSize) {\n      return;\n    }\n    let randomX = random(10);\n    const randomY = random(10);\n    if (randomX + maxSize <= 10) {\n      const gameboard = document.getElementById(\"AiGameboard\");\n      for (let i = 0; i < maxSize; i++) {\n        const xGrid = [...gameboard.querySelectorAll(`[data-x=\"${randomX}\"]`)];\n        const yGrid = xGrid.reduce((tot, x) => {\n          console.log(x.getAttribute(\"data-y\"), `${randomY}`);\n          tot = x.getAttribute(\"data-y\") === `${randomY}` ? x : tot;\n          return tot;\n        }, \"\");\n        console.log(yGrid, xGrid, gameboard);\n        yGrid.classList.add(\".\");\n        randomX++;\n      }\n      return randomShips(maxSize - 1, minSize);\n    }\n    return randomShips(maxSize, minSize);\n  };\n  const recieveAttack = async (e) => {\n    const yAxis = e.target.getAttribute(\"data-y\");\n    const xAxis = e.target.getAttribute(\"data-x\");\n    const xyAxis = +yAxis + +xAxis * 10;\n    if (attacked(xAxis, yAxis, \"hit\",'AiGameboard')) {\n      console.log(\"bye\");\n      return;\n    }\n    if (!attacked(xAxis, yAxis, \".\",'AiGameboard')) {\n      console.log(\"here\");\n      await props.setBoard((s) => {\n        console.log(s);\n        s[xyAxis] = <Missed x={xAxis} y={yAxis}/>;\n        return s;\n      });\n    }else{\n      console.log(\"Hitted\");\n      await props.setBoard((s) => {\n        s[xyAxis] = <Hitted x={xAxis} y={yAxis}/>;\n        return s;\n      });\n    }\n    forceUpdate(); \n    nextRound();\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      randomShips(5, 2);\n    }, 500);\n  }, []);\n  useEffect(() => {\n    return (\n      <Container>\n        {console.log(\"rendering\")}\n        <Gameboard\n          click={recieveAttack}\n          setBoard={props.setBoard}\n          drop={null}\n          board={props.board}\n          boardId=\"AiGameboard\"\n        />\n      </Container>\n    );\n  }, [props.board]);\n  return (\n    <Container>\n      {console.log(\"rendering\")}\n      <Gameboard\n        click={recieveAttack}\n        setBoard={props.setBoard}\n        drop={null}\n        board={props.board}\n        boardId=\"AiGameboard\"\n      />\n    </Container>\n  );\n};\nexport default AI;\n","/home/mralex/Code/TOP/battleship/src/components/Player.js",["47"],"import React, {useEffect} from \"react\";\nimport Gameboard from \"./Gameboard\";\nimport { Container } from \"react-bootstrap\";\nconst Player = (props) => {\n  const onDrop = (el) => {\n    el.preventDefault();\n    el.stopPropagation();\n    const data = el.dataTransfer.getData(\"text\");\n    if (+data === 0) {\n      return;\n    }\n    console.log(data, el);\n    console.log(\"here\");\n    const gridBlock = el.nativeEvent.path[0];\n    const yAxis = gridBlock.getAttribute(\"data-y\");\n    if (+yAxis + +data <= 10) {\n      let actual = gridBlock;\n      for (let i = 0; i < +data; i++) {\n        actual.classList.add(\"ship\");\n        actual = actual.nextElementSibling;\n      }\n      document.querySelector(`div[class='${data}']`).remove();\n      if (!document.querySelectorAll(\"#ship\").length) {\n        props.setStart(true);\n      }\n    }\n  };\n  return (\n    <Container>\n      <Gameboard\n        click={null}\n        board={props.board}\n        setBoard={props.setBoard}\n        drop={onDrop}\n        boardId=\"gameboard\"\n      />\n    </Container>\n  );\n};\n\nexport default Player;\n","/home/mralex/Code/TOP/battleship/src/components/Gameboard.js",["48","49","50","51","52"],"/home/mralex/Code/TOP/battleship/src/components/missed.js",[],"/home/mralex/Code/TOP/battleship/src/components/Hitted.js",[],"/home/mralex/Code/TOP/battleship/src/components/Ship.js",["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":37,"nodeType":"61","messageId":"62","endLine":7,"endColumn":43},{"ruleId":"59","severity":1,"message":"63","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":121,"column":6,"nodeType":"66","endLine":121,"endColumn":8,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":135,"column":6,"nodeType":"66","endLine":135,"endColumn":19,"suggestions":"69"},{"ruleId":"59","severity":1,"message":"70","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"70","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"71","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"59","severity":1,"message":"72","line":2,"column":15,"nodeType":"61","messageId":"62","endLine":2,"endColumn":18},{"ruleId":"59","severity":1,"message":"73","line":2,"column":20,"nodeType":"61","messageId":"62","endLine":2,"endColumn":29},{"ruleId":"59","severity":1,"message":"72","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"59","severity":1,"message":"63","line":3,"column":17,"nodeType":"61","messageId":"62","endLine":3,"endColumn":25},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomShips'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has missing dependencies: 'props.setBoard' and 'recieveAttack'. Either include them or remove the dependency array.",["77"],"'useEffect' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [randomShips]",{"range":"82","text":"83"},"Update the dependencies array to be: [props.board, props.setBoard, recieveAttack]",{"range":"84","text":"85"},[3767,3769],"[randomShips]",[4071,4084],"[props.board, props.setBoard, recieveAttack]"]