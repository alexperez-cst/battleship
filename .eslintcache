[{"/home/mralex/Code/TOP/battleship/src/index.js":"1","/home/mralex/Code/TOP/battleship/src/reportWebVitals.js":"2","/home/mralex/Code/TOP/battleship/src/components/App.js":"3","/home/mralex/Code/TOP/battleship/src/components/AI.js":"4","/home/mralex/Code/TOP/battleship/src/components/Player.js":"5","/home/mralex/Code/TOP/battleship/src/components/Gameboard.js":"6","/home/mralex/Code/TOP/battleship/src/components/missed.js":"7","/home/mralex/Code/TOP/battleship/src/components/Hitted.js":"8","/home/mralex/Code/TOP/battleship/src/components/Ship.js":"9"},{"size":558,"mtime":1610640010263,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610467407108,"results":"12","hashOfConfig":"11"},{"size":1697,"mtime":1610746137575,"results":"13","hashOfConfig":"11"},{"size":4258,"mtime":1610745811699,"results":"14","hashOfConfig":"11"},{"size":1081,"mtime":1610733158345,"results":"15","hashOfConfig":"11"},{"size":1152,"mtime":1610740391879,"results":"16","hashOfConfig":"11"},{"size":142,"mtime":1610742911989,"results":"17","hashOfConfig":"11"},{"size":102,"mtime":1610742916117,"results":"18","hashOfConfig":"11"},{"size":1129,"mtime":1610732472522,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2rks5c",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/home/mralex/Code/TOP/battleship/src/index.js",[],["43","44"],"/home/mralex/Code/TOP/battleship/src/reportWebVitals.js",[],"/home/mralex/Code/TOP/battleship/src/components/App.js",["45"],"/home/mralex/Code/TOP/battleship/src/components/AI.js",["46","47"],"import React, { useState, useEffect } from \"react\";\nimport Gameboard from \"./Gameboard\";\nimport Missed from \"./missed\";\nimport Hitted from \"./Hitted\";\nimport { Container } from \"react-bootstrap\";\nconst AI = (props) => {\n  const random = (max) => ~~(Math.random() * max);\n  const attacked = (x, y, filtering) => {\n    const gameboard = document.getElementById(\"AiGameboard\");\n    const xGrid = [...gameboard.querySelectorAll(`[data-x=\"${x}\"]`)];\n    const yGrid = xGrid.reduce((tot, x) => {\n      console.log(x.getAttribute(\"data-y\"), `${y}`);\n      tot = x.getAttribute(\"data-y\") === `${y}` ? x : tot;\n      return tot;\n    }, \"\");\n    console.log(xGrid, yGrid);\n    console.log(yGrid.classList);\n    return yGrid.classList.contains(filtering) ? true : false;\n  };\n  function* aggresiveAttack(xCord, yCord) {\n    let xAxis = xCord;\n    let yAxis = yCord;\n    for (let i = 0; i < 2; i++) {\n      for (let x = 1; x <= 2; x++) {\n        xAxis = x % 2 === 0 ? xAxis + 2 : xAxis - 1;\n        if (xAxis >= 10 || xAxis < 0) {\n          continue;\n        }\n        console.log(xAxis, yAxis);\n        if (attacked(xAxis, yAxis, \"hit\")) continue;\n        yield [xAxis, yAxis];\n      }\n      xAxis--;\n      for (let y = 1; y <= 2; y++) {\n        yAxis = y % 2 === 0 ? yAxis + 2 : yAxis - 1;\n        if (yAxis >= 10 || yAxis < 0) {\n          continue;\n        }\n        console.log(xAxis, yAxis);\n        if (attacked(xAxis, yAxis, \"hit\")) continue;\n        yield [xAxis, yAxis];\n      }\n    }\n  }\n  const nextRound = async () => {\n    console.log(\"In Next Round\");\n    const xAxis = random(10);\n    const yAxis = random(10);\n    if (attacked(xAxis, yAxis, \"hit\")) {\n      return nextRound();\n    }\n    if (props.sendAttack(xAxis, yAxis)) {\n      await setAttackMode(async () => {\n        for (const attack of aggresiveAttack(xAxis, yAxis)) {\n          if (props.sendAttack(...attack)) {\n            continue;\n          }\n          await setAttackMode(() => nextRound);\n          break;\n        }\n      });\n    }\n  };\n  const randomShips = (maxSize, minSize) => {\n    if (maxSize === minSize) {\n      return;\n    }\n    let randomX = random(10);\n    const randomY = random(10);\n    if (randomX + maxSize <= 10) {\n      const gameboard = document.getElementById(\"AiGameboard\");\n      for (let i = 0; i < maxSize; i++) {\n        const xGrid = [...gameboard.querySelectorAll(`[data-x=\"${randomX}\"]`)];\n        const yGrid = xGrid.reduce((tot, x) => {\n          console.log(x.getAttribute(\"data-y\"), `${randomY}`);\n          tot = x.getAttribute(\"data-y\") === `${randomY}` ? x : tot;\n          return tot;\n        }, \"\");\n        console.log(yGrid, xGrid, gameboard);\n        yGrid.classList.add(\".\");\n        randomX++;\n      }\n      return randomShips(maxSize - 1, minSize);\n    }\n    return randomShips(maxSize, minSize);\n  };\n  const [attackMode, setAttackMode] = useState(() => {\n    console.log(\"Calling Attack Mode\");\n    return nextRound;\n  });\n  const recieveAttack = async (e) => {\n    const yAxis = e.target.getAttribute(\"data-y\");\n    const xAxis = e.target.getAttribute(\"data-x\");\n    const xyAxis = +yAxis + +xAxis * 10;\n    if (attacked(xAxis, yAxis, \"hit\")) {\n      console.log(\"bye\");\n      return;\n    }\n    if (!attacked(xAxis, yAxis, \".\")) {\n      console.log(\"here\");\n      await props.setBoard((s) => {\n        console.log(s);\n        s[xyAxis] = <Missed />;\n        return s;\n      });\n      attackMode();\n      return;\n    }\n    await props.setBoard((s) => {\n      props.board[xyAxis] = <Hitted />;\n      return s;\n    });\n    console.log(\"Hitted\");\n    attackMode();\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      randomShips(5, 2);\n    }, 500);\n  }, []);\n  useEffect(() => {\n    return (\n      <Container>\n        {console.log(\"rendering\")}\n        <Gameboard\n          click={recieveAttack}\n          setBoard={props.setBoard}\n          drop={null}\n          board={props.board}\n          boardId=\"AiGameboard\"\n        />\n      </Container>\n    );\n  }, [props.board]);\n  return (\n    <Container>\n      {console.log(\"rendering\")}\n      <Gameboard\n        click={recieveAttack}\n        setBoard={props.setBoard}\n        drop={null}\n        board={props.board}\n        boardId=\"AiGameboard\"\n      />\n    </Container>\n  );\n};\nexport default AI;\n","/home/mralex/Code/TOP/battleship/src/components/Player.js",[],"/home/mralex/Code/TOP/battleship/src/components/Gameboard.js",["48","49","50","51","52"],"import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Container } from \"react-bootstrap\";\n\nfunction Gameboard(props) {\n  const createGameboard = () => {\n    const protoBoard = [];\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        protoBoard.push(\n          <div\n            onClick={props.click}\n            data-x={i}\n            data-y={j}\n            onDrop={props.drop}\n            onDragOver={(x) => x.preventDefault()}\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              borderTop: \"1px solid black\",\n              borderBottom: \"1px solid black\",\n              borderRight: \"1px solid black\",\n              borderLeft: `${j === 0 ? \"1px solid black\" : \"0px\"}`,\n              margin: \"0\",\n              padding: \"0\",\n              boxSizing: \"border-box\",\n            }}\n          ></div>\n        );\n      }\n    }\n    props.setBoard(protoBoard);\n  };\n  return (\n    <div id={props.boardId}>\n      {props.board.length ? null : createGameboard()}\n      {console.log(props.board)}\n      {props.board.map((a) => a)}\n    </div>\n  );\n}\n\nexport default Gameboard;\n","/home/mralex/Code/TOP/battleship/src/components/missed.js",["53"],"import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nconst Missed = () => {\n  return <div>ðŸ’¦</div>;\n};\n\nexport default Missed;\n","/home/mralex/Code/TOP/battleship/src/components/Hitted.js",[],"/home/mralex/Code/TOP/battleship/src/components/Ship.js",["54","55"],"import \"./App.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nfunction Ship(props) {\n  //length\n  const dragStart = (e, data) => {\n    console.log(e);\n    console.log(\"dragStart\");\n    e.dataTransfer.setData(\"text/plain\", data);\n    console.log(e.dataTransfer.getData(\"text\"));\n  };\n  const shipImg = () => {\n    const ship = [];\n    for (let i = 0; i < props.index; i++) {\n      ship.push(\n        <Col\n          style={{\n            width: \"9vw\",\n            height: \"9vw\",\n            border: \"1px solid black\",\n            backgroundColor: \"grey\",\n            margin: \"0\",\n            padding: \"0\",\n            boxSizing: \"border-box\",\n          }}\n          id=\"ship\"\n        />\n      );\n    }\n    return ship;\n  };\n  return (\n    <div\n      id=\"protoShip\"\n      class={props.index}\n      draggable={true}\n      onDragOver={(x) => x.preventDefault()}\n      onDragStart={(e) => dragStart(e, e.target.getAttribute(\"nodedata\"))}\n      nodedata={props.index}\n      style={{ width: `${props.index * 9}vw` }}\n    >\n      {shipImg().map((a) => a)}\n    </div>\n  );\n}\nexport default Ship;\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":7,"column":26,"nodeType":"62","messageId":"63","endLine":7,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":120,"column":6,"nodeType":"66","endLine":120,"endColumn":8,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":134,"column":6,"nodeType":"66","endLine":134,"endColumn":19,"suggestions":"69"},{"ruleId":"60","severity":1,"message":"70","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"71","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"61","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"72","line":2,"column":15,"nodeType":"62","messageId":"63","endLine":2,"endColumn":18},{"ruleId":"60","severity":1,"message":"73","line":2,"column":20,"nodeType":"62","messageId":"63","endLine":2,"endColumn":29},{"ruleId":"60","severity":1,"message":"61","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"72","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"71","line":3,"column":17,"nodeType":"62","messageId":"63","endLine":3,"endColumn":25},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomShips'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has missing dependencies: 'props.setBoard' and 'recieveAttack'. Either include them or remove the dependency array.",["77"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [randomShips]",{"range":"82","text":"83"},"Update the dependencies array to be: [props.board, props.setBoard, recieveAttack]",{"range":"84","text":"85"},[3666,3668],"[randomShips]",[3970,3983],"[props.board, props.setBoard, recieveAttack]"]